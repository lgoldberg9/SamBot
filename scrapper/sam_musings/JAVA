Warning!  This musing is snarky, opinionated, slightly technical,  and even more disjointed than most. A few decades ago, some folks at Sun Microsystems developed a new programming language that they called Java [1].  It has since become incredibly popular. I've noticed that there seems to be a similarly named product out there, called JAVA (all caps).  I've seen mentioned it in job advertisements, rsums, listservs, and more.  I've had trouble figuring out the details, but it must be a different language than Java, which is not an acronym.  I've not been able to find detailed information or an implementation anywhere [4]. I keep wondering what the acronym JAVA stands for.  Is it a product language from Microsoft, "Just A Variant ActiveX"?  Is it a way to refer to "Java Adapted for Virtual Achitectures"?  Is it a "Just-in-time Asynchronous Visual Assembler", whatever that might be?  Is it a multiply self-referential acronym, such as "JAVA, A Vaporware Acronym"?  I'm pretty not sure it's what students call one of my colleagues [5]. What?  You mean to tell me that "JAVA" is s how some people write "Java"? Is it really the case that there are technical people who don't understand that all-caps words are supposed to represent acronyms?  How do these people get jobs [6]?  And what's their relationship to the people who can't distinguish between Java and JavaScript, two very different languages who share only a C-based syntax [7], a legacy of being named by marketers, and an incomplete embrace of object-oriented principles. [1] One of the lead designers was James Gosling.  I've never trusted Gosling since someone foisted something called "Gosling Emacs" on me after I'd spent four years working with the old TOPS-20 Emacs.  Gosling Emacs is responsible for me switching to vi.  I see from the Wikipedia article on Gosling Emacs [2] that "[i]ts extension language, Mocklisp, has a syntax that appears similar to Lisp, but Mocklisp does not have lists".  Who designs a Lisp-like language without lists and why would anyone every let them near any language design problem again [3]? [2] What does it mean that "This article relies too much on references to primary sources"?  Isn't that what good writing does. [3] I am critical of Gosling.  But he is clearly a much more successful and influential computer scientist than I am.  Is my critism based on jealousy?  No.  It's based on my experience and opinions.  And I'm certainly opinionated on lots of topics. [4] Admittedly, I haven't looked very hard. [5] The Jiu-jitsu Affiliated Vivacious Assistant prof. [6] If you can't get the details right about something as simple as the name of a programming language, why would anyone trust you with their code? [7] Why do people like C syntax?  Are curly braces really that beautiful? Do we need a syntax that seems to treat every byte as costly? Version 1.0 released 2018-01-29.