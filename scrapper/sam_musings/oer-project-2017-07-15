Another entry in the "If you have to write about something, make it a musing" series. As I noted recently, I spent the last week in a workshop on open educational resources.  Our final task for the workshop was to come up with an open educational project related to our teaching. In the prior musing, I thought that project might have to do with accessibility, mostly using resources on accessibility. But now that I've thought about it a bit more day, I've found that I want to think a bit more on ways to "open up" CSC 151. Our readings for the last day of the workshop were a piece by Robin DeRosa on Open Pedagogy and a piece by Miranda Dean on Open Pedagogy. DeRosa is a faculty member who had built an online anthology; Dean is a student who participated in a class that focused on Open Pedagogy. From what I can tell, Open Pedagogy is the not-so-new idea that students can work in the open and produce resources that others may use.  It spans the gamut, including having students help build the textbook or resource, as in The Grinnell Beowulf; requiring students to write 'blog posts; or having students contribute to Wikipedia.  I've been reluctant to use those approaches in our introductory sequence because, well, evidence suggests that students don't know the material well enough to write about it.  But DeRosa's piece convinced me that it's worth thinking about ways in which they might contribute.  So my project is to think about what that might mean. Here is Liz's outline for thinking about our project. Goal: Why use OER/go open? Idea/What Id like to use/What Id like to do. Content I need. How I will get it/Make it. Barriers. Ways to get past barriers. Possible workflow. That's doesn't quite match what the way I think, or perhaps even my particular project, but I'll try.  I also entered the workshop with the broader plan of building the new CSC 151 open textbook, so some of my responses will relate to that. Goal: Why use OER or go open?   I've always been open with my teaching materials.  I'm part of a community of CS teachers, both local and national.  By making my materials freely available, I support others.  I've certainly seen it help at Grinnell, when folks teaching a class for the first time rely on the things their colleagues have prepared [1]. As a colleague in the workshop mentioned, one of the reasons to write your own materials is that you are much more free to adapt and update them as you go.  You can do that with CC-licensed materials, too, but I've not found CC-licensed materials that I love.  I've certainly found it useful to be able to update the CSC 151 materials in the past.  I've found it equally valuable that we had a community of faculty updating them. When I started teaching the class, I separated the readings from the labs. Janet and I reworked the curriculum to focus on image making.  Jerod added self-reflection problems at the end of each reading.  Everyone fine-tuned the problems.  Charlie reformatted everything.  The list goes on and on. Owning the resources have also meant that I've felt free to reorganize the course.  Of course, reorganizing is more difficult than one might think.  It's not just teaching the materials in a different order; it also requires that you think about prerequisite knowledge for each reading and lab and rewrite them as appropriate. Idea/What Id like to use/What Id like to do I have two tasks.  One that was already planned is to write an open textbook plus lab manual for an introduction to computer science in Scheme/Racket, focusing on issues and problems in data science [2]. The new one is to set up an infrastructure through which students can  contribute.  That infrastructure will include the technical side (GitHub) and the pedagogical side (what should I ask/allow students to do?). Content I need I will be creating my own content.  I need about forty readings and labs.  I need seven or eight assignments.  I need four examinations and one final.  I need some good data science examples to consider throughout the course, just as we had some continuing examples in the iamge-based CSC 151. How I will get it/Make it I can rely on the material we've developed for the old version of CSC 151 for ideas and even for some text. I will follow the same process I've used when making other materials: To get a uniform voice, I usually write the materials and then have collaborators check them over and provide updates and corrections and such. Barriers For "write a text and lab manual", the biggest barrier seems to be time.  The semester is fast approaching.  I can write quickly, but I need to make sure to have time to write. For "allow student contributions", the barriers seem to be (a) figuring out where in an already-packed curriculum to teach students how to use GitHub and (b) what kinds of work I can naturally give to students who do not yet know the material. Ways to get past barriers For "write a text and lab manual": Focus.  Try not to take on other projects.  Find time every day to write, even when I'm running workshops or the code camp. For "allow student contributions", talk to Liz and others about ideas. It sounds like that's worked really well for others.  I might also send questions to DeRosa and the SIGCSE listserv. Possible workflow Plan the daily schedule so that I can think about the relationship between materials.  Done. Preliminary meetings with collaborators.  Done. Build Web site.  Done. Set up GitHub repository.  Done. Start daily writing (see next entry). Talk to colleagues about CC license. Contact folks re "allow student collaborations".   Plan to revise throughout the semester [3] and after the semester. Daily writing: Write at least one reading and lab per day.  Send to collaborators.  Incorporate suggestions. Further notes Upon reflection, I think the "allow student contributions" is a good task for next semester or next year.  Right now, my main focus will be on building the open textbook.  But it's useful to keep the future "allow student contributions" in mind as I develop the materials.   [1] And yes, I've also relied on my colleagues' materials. [2] Whatever that is. [3] Not much time for that!