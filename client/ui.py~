import curses

WIDTH = 78
CHAT_HEIGHT = 24
INPUT_HEIGHT = 1
USERNAME_DISPLAY_MAX = 8

mainwin = None
chatwin = None
inputwin = None

messages = [''] * CHAT_HEIGHT
num_messages = 0

def ui_init():
    # Create the main window
    mainwin = curses.initscr()
    if mainwin == None:
        print("Failed to initialize screen")
        exit()

    # Don't display characters when they're pressed
    curses.noecho()

    # Create the chat window
    chatwin = mainwin.subwin(CHAT_HEIGHT + 2, WIDTH + 2, 0, 0)
    chatwin.box(0, 0)

    # Create the input window
    inputwin = mainwin.subwin(INPUT_HEIGHT + 2, WIDTH + 2, CHAT_HEIGHT + 2, 0)
    inputwin.box(0, 0)

    # Refresh the dysplay
    curses.refresh()

def ui_clear_chat():
    for i in range(WIDTH):
        for j in range(CHAT_HEIGHT):
            chatwin.addch(1 + j, 1 + i, ' ')

def ui_add_message(username, message):
    ui_clear_chat()

    if num_messages == CHAT_HEIGHT:
        messages.pop(num_messages)
    else:
        num_messages += 1

    offset = 0

    if username == None:
        post_username = '  '
        offset = 2
    elif len(username) > USERNAME_DISPLAY_MAX:
        post_username = username[0:USERNAME_DISPLAY_MAX - 3] + '...: ')
        offset = USERNAME_DISPLAY_MAX
    else:
        post_username = username + ': '
        offset = len(username) + len(': ')

    if (len(message) > WIDTH - offset):
        messages.insert(0, post_username + message[0:WIDTH - offset])
        ui_add_message(None, messages[0])
    else: 
        messages.insert(0, post_username + message)

        for i in range(num_messages):
            chatwin.addstr(CHAT_HEIGHT - i, 1, messages[i])

    chatwin.wrefresh()
    inputwin.wrefresh()
    
def ui_clear_input():
    for i in range(WIDTH):
        inputwin.addch(1, 1+i, ' ')

def ui_read_input():
    length = 0
    c = -1
    buffer = (WIDTH + 1) * []
    buffer[0] = '\0'

    while ((c = inputwin.getch()) != '\n'):
        if (c == KEY_BACKSPACE or c == KEY_DC or c == 127):
            if (length > 0):
                length--
                buffer[length] = '\0'
            elif (length < WIDTH):
                buffer[length] = c
                buffer[length+1] = '\0'
                length++
    ui_clear_input()
    inputwin.mvwaddstr(1, 1, buffer)
    inputwin.wrefresh()
    return buffer


def ui_shutdown():
    curses.endwin()
    curses.refresh()
